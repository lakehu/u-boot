{
    // See https://go.microsoft.com/fwlink/?LinkId=733558 
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "echo",
            "type": "shell",
            "command": "echo ${workspaceFolder}, ${env:HOME}"
        },
        {
            "label": "kill run qemu",
            "type": "shell",
            "command": "killall qemu-system-aarch64   >/dev/null  2>&1; echo kill done  ; exit 0"
        },        
        {
            "type": "shell",
            "label": "build",
            "command": "PATH=$HOME/usr/bin:$PATH make",
            "args": [
                "ARCH=arm64", "CROSS_COMPILE=aarch64-linux-gnu-","-j8"
            ],
            "options": {
                "cwd": "${workspaceFolder}"
            },            
            "group": {
                "kind": "build",
                "isDefault": true
            }
        },
        {
            "type": "shell", 
            "label": "run",            
            //Add "-d int,guest_errors" to qemu to generate info log if problemMatcher can't match empty output
            "command": " echo Start MyQemuAarch64; LD_LIBRARY_PATH=${env:HOME}/usr/lib:${env:HOME}/usr/lib64   ${env:HOME}/usr/bin/qemu-system-aarch64  -nographic -device VGA     -machine virt -cpu cortex-a57   -m 1024M  -kernel ${workspaceFolder}/u-boot -net nic -net user -serial mon:stdio    -S    -gdb tcp::41234   ",
            "args": [                
                //"41234"   // GDB server listing port on ARM Target 
            ],
            "options": {
                "cwd": "${workspaceFolder}"                    
            },
            "isBackground": true,
            "dependsOn": ["kill run qemu"],
            "presentation": {
                "echo": true,
                "clear": true
              },
              //Add "-d int,guest_errors" to qemu to generate info log if problemMatcher can't match empty output 
              "problemMatcher": [
                {
                  "pattern": [
                    {
                      "regexp": ".",
                      "file": 1,
                      "location": 2,
                      "message": 3
                    }
                  ],
                  "background": {
                    "activeOnStart": true,
                    "beginsPattern": ".",
                    "endsPattern": ".",
                  }
                }
              ]
        },
        {
            "label": "Build and run",
            "dependsOrder":"sequence",
            "dependsOn": [
                "build",
                "run",
            ]
        }  
    ]
}
